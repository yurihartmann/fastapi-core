name: üì¶ Upload Python Package to PyPI

on:
  push:
    branches:
      - 'main'
      - 'release'

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: ‚öôÔ∏è Install Poetry
      run: pip install poetry

    - name: ‚öôÔ∏è Install Dependencies
      run: poetry config virtualenvs.create false && poetry install

    - name: ‚öôÔ∏è Build library
      run: poetry build

    - name: ‚öôÔ∏è Set Version Variable
      run: |
        VER=$(echo "$(poetry version)" | cut -d ' ' -f 2)
        echo "VERSION=$VER" >> $GITHUB_ENV

    # TestPyPI
#    - name: üîµ Publish to Test PyPI
#      if: ${{ github.ref == 'refs/heads/release' }}
#      env:
#        TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
#        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
#      run: twine upload --skip-existing -r testpypi dist/*

    - name: üîµ Publish to Test PyPI
      if: ${{ github.ref == 'refs/heads/release' }}
      run: |
        poetry config repositories.test-pypi https://test.pypi.org/legacy/
        poetry config pypi-token.test-pypi ${{ secrets.POETRY_PYPI_TOKEN_TEST_PYPI }}
        poetry publish -r test-pypi --skip-existing

#    - name: ‚úèÔ∏è Create Pre-release
#      if: ${{ github.ref == 'refs/heads/release' }}
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        tag: ${{ env.VERSION }}-rc.${{ github.sha }}
#      run: |
#        gh release create "$tag" \
#            --repo="$GITHUB_REPOSITORY" \
#            --title="${GITHUB_REPOSITORY#*/} ${tag#v}" \
#            --generate-notes --prerelease

    # PyPI poetry config pypi-token.pypi pypi-XXXXXXXX
#    - name: üü¢ Publish to PyPI
#      if: ${{ github.ref == 'refs/heads/main' }}
#      env:
#        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
#        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#      run: twine upload dist/*

    - name: üü¢ Publish to PyPI
      if: ${{ github.ref == 'refs/heads/main' }}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        poetry config pypi-token.pypi ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
        poetry publish
name: üì¶ Upload Python Package to PyPI

on:
  push:
    branches:
      - 'main'
      - 'release'

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: ‚öôÔ∏è Install Poetry
      run: pip install poetry

    - name: ‚öôÔ∏è Install Dependencies
      run: poetry config virtualenvs.create false && poetry install

    - name: ‚öôÔ∏è Build library
      run: poetry build

    - name: ‚öôÔ∏è Set Version
      run: export VERSION=$(echo "$(poetry version)" | cut -d ' ' -f 2)

    # TestPyPI
    - name: üîµ Publish to Test PyPI
      if: ${{ github.ref == 'refs/heads/release' }}
      env:
        TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
      run: twine upload --skip-existing -r testpypi dist/*

    - name: ‚úèÔ∏è Create Pre-release
      if: ${{ github.ref == 'refs/heads/release' }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ vars.VERSION }}-rc.${{ github.sha }}
        release_name: Pre-release ${{ vars.VERSION }}-rc.${{ github.sha }}
        body: Pre-release
        draft: false
        prerelease: true

    # PyPI
    - name: üü¢ Publish to PyPI
      if: ${{ github.ref == 'refs/heads/main' }}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload dist/*